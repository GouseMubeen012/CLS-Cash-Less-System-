# Deployment Guide for Your Project

This guide covers:
- Uploading your project to GitHub
- Setting up a server with PostgreSQL
- Deploying the backend and frontend
- Running migrations
- Environment variable setup
- Starting the application

---

## 1. Uploading Project to GitHub

1. **Create a new repository** on GitHub (e.g., `your-project-name`).
2. **Initialize git** (if not already):
   ```bash
   git init
   ```
3. **Add remote origin** (replace with your repo URL):
   ```bash
   git remote add origin https://github.com/yourusername/your-project-name.git
   ```
4. **Add all files, commit, and push:**
   ```bash
   git add .
   git commit -m "Initial commit"
   git branch -M main
   git push -u origin main
   ```

---

## 2. Server Setup

1. **Install Node.js & npm**
   - On Ubuntu:
     ```bash
     sudo apt update
     sudo apt install nodejs npm
     ```
2. **Install PostgreSQL**
   - On Ubuntu:
     ```bash
     sudo apt install postgresql postgresql-contrib
     ```
   - Start and enable Postgres:
     ```bash
     sudo systemctl start postgresql
     sudo systemctl enable postgresql
     ```

---

## 3. Clone Your Repo

```bash
git clone https://github.com/yourusername/your-project-name.git
cd your-project-name
```

---

## 4. Database Setup

1. **Switch to Postgres user:**
   ```bash
   sudo -i -u postgres
   ```
2. **Create database & user:**
   ```bash
   createdb your_db_name
   createuser your_db_user --pwprompt
   psql
   # In psql shell:
   GRANT ALL PRIVILEGES ON DATABASE your_db_name TO your_db_user;
   \q
   exit
   ```
3. **Configure environment variables**
   - Edit `/backend/.env` with your DB credentials:
     ```env
     DB_HOST=localhost
     DB_PORT=5432
     DB_NAME=your_db_name
     DB_USER=your_db_user
     DB_PASSWORD=your_password
     ```

---

## 5. Install Dependencies

- **Backend:**
  ```bash
  cd backend
  npm install
  ```
- **Frontend:**
  ```bash
  cd ../frontend
  npm install
  ```

---

## 6. Run Migrations

- **After Postgres is running and .env is configured:**
  ```bash
  cd ../backend/src/db
  node migrations.js
  ```
- This creates/updates your database schema. Run it whenever you update migrations.js or change schema.

---

## 7. Start the Application

- **Backend:**
  ```bash
  cd ../../
  npm start
  # or
  node src/index.js
  ```
- **Frontend:**
  ```bash
  cd ../frontend
  npm start
  # or to build for production
  npm run build
  # Serve build with a static server (optional)
  npm install -g serve
  serve -s build
  ```

---

## 8. (Optional) Docker Deployment
- If you prefer Docker, use `docker-compose.yml` in the project root.
- Run:
  ```bash
  docker-compose up --build
  ```

---

## 9. Troubleshooting
- Ensure Postgres is running and accessible.
- Check environment variables for typos.
- Review logs for errors.
- Rerun migrations if schema changes.

---

## 10. Updating Your Deployment
- Pull latest changes from GitHub:
  ```bash
  git pull origin main
  ```
- Reinstall dependencies and rerun migrations if needed.

---

**You must always run `migrations.js` after setting up Postgres and before starting the backend for the first time, or after any schema changes.**

For further help, check README files or contact your project maintainer.
